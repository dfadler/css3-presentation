-content_for :head do
  %title Transformations | Gaining Support Every Angry Inch
%h1 Transformations
%p There are two types of transformations 2D and 3D. 
%h2 Basic 2D Transformations
#skew.basic
  %p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.
#scale.basic
  %p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.
#rotate.basic
  %p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.
#translate.basic
  %p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.
#rotate-skew-scale-translate.basic
  %p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.
:coderay
  #!css 
  /* You can pass x, y, z axis to the skew transform property */
  #skew {
    transform: skew(35deg, 5deg);
  }
  
  /* You can pass x, y axis to the scale transform property */
  #scale {
    transform: scale(1, 0.5);
  }
  
  /* You can pass the degree and perspective to the rotate property  */
  #rotate {
    transform: rotate(45deg);
  }
  
  /* You can pass x and y to the translate property which will position the element similarly to position absolute or relative */
  #translate {
    transform: translate(10px, 20px);
  }
  
  /* You can also combine transform properties */
  #rotate-skew-scale-translate {
    transform:  scale(1.2, 1.2) rotateZ(40deg) translate(10px, 20px) skew(30deg, 0);
  }
%h2 Basic 3D Transformations
%blockquote
  %p 3D transforms are similar to 2D transforms. The basic properties are translate3d, scale3d, rotateX, rotateY and rotateZ. Translate3d and scale3d take three arguments for x,y and z, whereas the rotates just take an angle.
  %cite #{ link_to('3D Examples', 'http://css3.bradshawenterprises.com/transforms/', :target => '_blank')}
#trans3d
  #one
    %p rotateX
  #two
    %p rotateY
  #three
    %p rotateZ
:coderay
  #!css
  #trans3d div {
    transition: all 0.5s ease-in-out;
    perspective: 800;
    perspective-origin: 50% 100px;
  }
  #trans3d:hover #one {
    transform: rotateX(180deg);
  }
  #trans3d:hover #two {
    transform: rotateY(180deg);
  }
  #trans3d:hover #three {
    transform: rotate(180deg);
  }
%h2 Browser Support
%blockquote
  %p The transform property is not supported in any browser.
  %p Internet Explorer supports an alternative, the -ms-transform property (2D transforms only).
  %p Firefox supports an alternative, the -moz-transform property (2D transforms only).
  %p Opera supports an alternative, the -o-transform property (2D transforms only).
  %p Safari and Chrome support an alternative, the -webkit-transform property (3D and 2D transforms).
  %cite #{ link_to('http://www.w3schools.com/cssref/css3_pr_transform.asp', 'http://www.w3schools.com/cssref/css3_pr_transform.asp', :target => '_blank')}
%h2 Cross Browser Solutions
%p There are a few projects that seek to detect support and apply the proper animation technique accordingly. These projects are promising but it could be years before either is robust much less works in all browsers.
%ul
  %li #{ link_to('http://playground.benbarnett.net/jquery-animate-enhanced/', 'http://playground.benbarnett.net/jquery-animate-enhanced/', :target => '_blank')}
  %li #{ link_to('http://ricostacruz.com/jquery.transit/', 'http://ricostacruz.com/jquery.transit/', :target => '_blank')}
%p Long story short you will have an up hill battle if you want to start using 3D transformations in all browsers.
%h1 Building on the basics
%p This next example will only work in Webkit browser but it is a great example of the power at your fingertips with 3D transformations.
%p 
  %a{ :href => 'http://css3.bradshawenterprises.com/transforms/#transDemo3', :target => '_blank'}
    #{ image_tag('cube.png', :alt => '')}

%h1 CSS 3D Transformations In Depth
%p If you would like to know more there is a #{ link_to('great project by Desandro', 'http://desandro.github.com/3dtransforms/', :target => '_blank')} on CSS 3D transforms. 